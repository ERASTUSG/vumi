# Default (xenial) has antique openssl that cryptography no longer supports.
dist: bionic

language: python
python:
  - "2.7"
  - "3.6"
matrix:
  include:
    # Test against the oldest version of Twisted that we claim to support.
    # Also test against Riak 2.1.1.
    # This is a separate matrix inclusion to avoid spawning unnecessary builds.
    # Although there are two different things we're testing against here, they
    # are orthogonal and any failures should be easily attributable to either
    # Twisted version or Riak version without adding an additional build job.
    # Twisted 13.2 requires PyCrypto for twisted.conch.ssh support.
    - python: "2.7"
      env: TWISTED_VERSION="Twisted==13.2.0" RIAK_VERSION="2.1.1" PYCRYPTO_VERSION="PyCrypto==2.6.1"
    # Test on pypy without coverage, because it's unnecessary and very slow.
    # The exact versions of pypy available seem to change over time, so just
    # use whatever version pypy2 gets us.
    - python: "pypy2"
      env: NO_COVERAGE=1
    - python: "3.6"
      env: RUN_TESTS="false"
  allow_failures:
    - python: "3.6"
    - env: RUN_TESTS="true"

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/downloads
services:
  - redis-server

before_install:
  # Default values for our build envvars.
  - export RIAK_VERSION="${RIAK_VERSION-1.4.12}"
  - export TWISTED_VERSION="${TWISTED_VERSION-Twisted}"
  - export NODEJS_VERSION="${NODEJS_VERSION-lts/carbon}"
  - export RUN_TESTS="${RUN_TESTS-true}"
  # Set up an appropriate version of Riak.
  - utils/setup_travis_riak.sh "${RIAK_VERSION}"
  # Set up an appropriate version of nodejs.
  - nvm install $NODEJS_VERSION
install:
  # Travis seems to have pip 6.x, which doesn't build and cache wheels.
  - "pip install 'pip>=7.1.0'"
  - "pip install ${TWISTED_VERSION}"
  # If requested, install PyCrypto
  - if [ ! -z "$PYCRYPTO_VERSION" ]; then pip install "$PYCRYPTO_VERSION"; fi
  - "pip install -r requirements.pip"
  - "pip install coveralls"

before_script:
  # To see what version of Riak we're running and check that it's happy.
  - $HOME/riak/bin/riak version
  - $HOME/riak/bin/riak-admin member-status
script:
  - if [ -z "$NO_COVERAGE" ]; then COVERAGE_CMD="coverage run --source=vumi"; else COVERAGE_CMD=""; fi
  - if [ "$RUN_TESTS" == "true" ]; then VUMI_TEST_ASSERT_CLOSED=true VUMI_TEST_TIMEOUT=20 VUMITEST_REDIS_DB=1 VUMI_TEST_NODE_PATH="$(which node)" $COVERAGE_CMD `which trial` vumi; fi

after_success:
  - if [ -z "$NO_COVERAGE" ]; then coveralls; fi
